The 6 most popular programming languages according to codeeval:

http://blog.codeeval.com/codeevalblog/2014#.UxzEEc6fjAs

1. Python language is cross platform. One of the differences between it and C# is that Python does not use c-like syntax.
Also Python is slower than C#, but still pretty fast compared to other dynamic languages.

2. Java and C# look the same, but they have differences between the two under the sheets.
Being an expert in one, does not make you an expert in the other by any stretch of the imagination. 
The syntax is similar and libraries are too, so it would be easier to get up to speed in one or the other,
but there are subtleties that can trip you up.

3.  C++ is designed to be a low-level platform-neutral object-oriented programming language. 
C# is designed to be a somewhat higher-level component-oriented language. The main similarity between C# and C++ is 
that they both inherited basic syntax and the first letter of their name from C.

4. One of the differences between Ruby and C# is that C# is statically typed 
and Ruby is dynamically programming language.The similarities between them are that they are strongly typed, 
object-oriented and general-purpose programming languages.


5. JavaScript is a dynamically typed language, while C# is a statically typed language. Their syntaxes both derived from C 
and they are object-oriented languages.  It is most commonly used as part of web browsers. It is also being used in server-side programming,
game development and the creation of desktop and mobile applications.

6. C# is a strongly-typed language. Every variable and constant has a type, as does every expression that evaluates to a value.
Every method signature specifies a type for each input parameter and for the return value. 
The .NET Framework class library defines a set of built-in numeric types as well as more complex types that represent 
a wide variety of logical constructs, such as the file system, network connections, collections and arrays of objects, and dates.
A typical C# program uses types from the class library as well as user-defined types that model the concepts that are specific
to the program's problem domain.